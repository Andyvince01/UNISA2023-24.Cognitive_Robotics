// Generated by gencpp from file chatbot/Dialogue.msg
// DO NOT EDIT!


#ifndef CHATBOT_MESSAGE_DIALOGUE_H
#define CHATBOT_MESSAGE_DIALOGUE_H

#include <ros/service_traits.h>


#include <chatbot/DialogueRequest.h>
#include <chatbot/DialogueResponse.h>


namespace chatbot
{

struct Dialogue
{

typedef DialogueRequest Request;
typedef DialogueResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Dialogue
} // namespace chatbot


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::chatbot::Dialogue > {
  static const char* value()
  {
    return "af708bc8927c16924fd75aabb46f9abb";
  }

  static const char* value(const ::chatbot::Dialogue&) { return value(); }
};

template<>
struct DataType< ::chatbot::Dialogue > {
  static const char* value()
  {
    return "chatbot/Dialogue";
  }

  static const char* value(const ::chatbot::Dialogue&) { return value(); }
};


// service_traits::MD5Sum< ::chatbot::DialogueRequest> should match
// service_traits::MD5Sum< ::chatbot::Dialogue >
template<>
struct MD5Sum< ::chatbot::DialogueRequest>
{
  static const char* value()
  {
    return MD5Sum< ::chatbot::Dialogue >::value();
  }
  static const char* value(const ::chatbot::DialogueRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::chatbot::DialogueRequest> should match
// service_traits::DataType< ::chatbot::Dialogue >
template<>
struct DataType< ::chatbot::DialogueRequest>
{
  static const char* value()
  {
    return DataType< ::chatbot::Dialogue >::value();
  }
  static const char* value(const ::chatbot::DialogueRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::chatbot::DialogueResponse> should match
// service_traits::MD5Sum< ::chatbot::Dialogue >
template<>
struct MD5Sum< ::chatbot::DialogueResponse>
{
  static const char* value()
  {
    return MD5Sum< ::chatbot::Dialogue >::value();
  }
  static const char* value(const ::chatbot::DialogueResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::chatbot::DialogueResponse> should match
// service_traits::DataType< ::chatbot::Dialogue >
template<>
struct DataType< ::chatbot::DialogueResponse>
{
  static const char* value()
  {
    return DataType< ::chatbot::Dialogue >::value();
  }
  static const char* value(const ::chatbot::DialogueResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CHATBOT_MESSAGE_DIALOGUE_H
