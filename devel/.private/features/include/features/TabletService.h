// Generated by gencpp from file features/TabletService.msg
// DO NOT EDIT!


#ifndef FEATURES_MESSAGE_TABLETSERVICE_H
#define FEATURES_MESSAGE_TABLETSERVICE_H

#include <ros/service_traits.h>


#include <features/TabletServiceRequest.h>
#include <features/TabletServiceResponse.h>


namespace features
{

struct TabletService
{

typedef TabletServiceRequest Request;
typedef TabletServiceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct TabletService
} // namespace features


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::features::TabletService > {
  static const char* value()
  {
    return "8b55dba5ce52d0e4d2c88f751b201113";
  }

  static const char* value(const ::features::TabletService&) { return value(); }
};

template<>
struct DataType< ::features::TabletService > {
  static const char* value()
  {
    return "features/TabletService";
  }

  static const char* value(const ::features::TabletService&) { return value(); }
};


// service_traits::MD5Sum< ::features::TabletServiceRequest> should match
// service_traits::MD5Sum< ::features::TabletService >
template<>
struct MD5Sum< ::features::TabletServiceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::features::TabletService >::value();
  }
  static const char* value(const ::features::TabletServiceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::features::TabletServiceRequest> should match
// service_traits::DataType< ::features::TabletService >
template<>
struct DataType< ::features::TabletServiceRequest>
{
  static const char* value()
  {
    return DataType< ::features::TabletService >::value();
  }
  static const char* value(const ::features::TabletServiceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::features::TabletServiceResponse> should match
// service_traits::MD5Sum< ::features::TabletService >
template<>
struct MD5Sum< ::features::TabletServiceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::features::TabletService >::value();
  }
  static const char* value(const ::features::TabletServiceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::features::TabletServiceResponse> should match
// service_traits::DataType< ::features::TabletService >
template<>
struct DataType< ::features::TabletServiceResponse>
{
  static const char* value()
  {
    return DataType< ::features::TabletService >::value();
  }
  static const char* value(const ::features::TabletServiceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // FEATURES_MESSAGE_TABLETSERVICE_H
