// Generated by gencpp from file features/Rest.msg
// DO NOT EDIT!


#ifndef FEATURES_MESSAGE_REST_H
#define FEATURES_MESSAGE_REST_H

#include <ros/service_traits.h>


#include <features/RestRequest.h>
#include <features/RestResponse.h>


namespace features
{

struct Rest
{

typedef RestRequest Request;
typedef RestResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Rest
} // namespace features


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::features::Rest > {
  static const char* value()
  {
    return "92dac20d0566a4f591e3ecd6dcd3458b";
  }

  static const char* value(const ::features::Rest&) { return value(); }
};

template<>
struct DataType< ::features::Rest > {
  static const char* value()
  {
    return "features/Rest";
  }

  static const char* value(const ::features::Rest&) { return value(); }
};


// service_traits::MD5Sum< ::features::RestRequest> should match
// service_traits::MD5Sum< ::features::Rest >
template<>
struct MD5Sum< ::features::RestRequest>
{
  static const char* value()
  {
    return MD5Sum< ::features::Rest >::value();
  }
  static const char* value(const ::features::RestRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::features::RestRequest> should match
// service_traits::DataType< ::features::Rest >
template<>
struct DataType< ::features::RestRequest>
{
  static const char* value()
  {
    return DataType< ::features::Rest >::value();
  }
  static const char* value(const ::features::RestRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::features::RestResponse> should match
// service_traits::MD5Sum< ::features::Rest >
template<>
struct MD5Sum< ::features::RestResponse>
{
  static const char* value()
  {
    return MD5Sum< ::features::Rest >::value();
  }
  static const char* value(const ::features::RestResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::features::RestResponse> should match
// service_traits::DataType< ::features::Rest >
template<>
struct DataType< ::features::RestResponse>
{
  static const char* value()
  {
    return DataType< ::features::Rest >::value();
  }
  static const char* value(const ::features::RestResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // FEATURES_MESSAGE_REST_H
